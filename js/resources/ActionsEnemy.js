/**
 * @author Jordi Ros: shine.3p@gmail.com
 *
 */

var EnemyActions = EnemyActions || {};

// InfLig
EnemyActions.InfLig1 = [
    { time: 0.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0]); } },
    { time: 1.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0], 0, 10); } },
    { time: 2.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0]); } },
    { time: 3.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0], 0, 10); } },
    { time: 4.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0]); } },
    { time: 5.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0], 0, 10); } },
    { time: 6.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0]); } },
    { time: 7.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0], 0, 10); } },
    { time: 8.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0]); } },
];
EnemyActions.InfLig2 = [
    { time: 2.50, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true,  Enemies.InfLig.bo[0], 0, 10); } },
    { time: 2.65, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, false, Enemies.InfLig.bo[0]); } },
    { time: 2.80, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, false, Enemies.InfLig.bo[0], 0, 10); } },
    { time: 5.50, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true,  Enemies.InfLig.bo[0]); } },
    { time: 5.65, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, false, Enemies.InfLig.bo[0], 0, 10); } },
    { time: 5.80, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, false, Enemies.InfLig.bo[0]); } },
    { time: 7.50, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true,  Enemies.InfLig.bo[0], 0, 10); } },
    { time: 7.65, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, false, Enemies.InfLig.bo[0]); } },
    { time: 7.80, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, false, Enemies.InfLig.bo[0], 0, 10); } },
];
EnemyActions.InfLig3 = [
    { time: 0.50, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true,  Enemies.InfLig.bo[0]); } },
    { time: 0.65, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, false, Enemies.InfLig.bo[0]); } },
    { time: 0.80, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, false, Enemies.InfLig.bo[0], 0, 10); } },
    { time: 2.50, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true,  Enemies.InfLig.bo[0]); } },
    { time: 2.65, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, false, Enemies.InfLig.bo[0], 0, 10); } },
    { time: 2.80, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, false, Enemies.InfLig.bo[0]); } },
    { time: 4.50, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true,  Enemies.InfLig.bo[0]); } },
    { time: 4.65, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, false, Enemies.InfLig.bo[0], 0, 10); } },
    { time: 4.80, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, false, Enemies.InfLig.bo[0]); } },
    { time: 6.50, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true,  Enemies.InfLig.bo[0], 0, 10); } },
    { time: 6.65, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, false, Enemies.InfLig.bo[0]); } },
    { time: 6.80, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, false, Enemies.InfLig.bo[0]); } },
    { time: 8.50, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true,  Enemies.InfLig.bo[0], 0, 10); } },
    { time: 8.65, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, false, Enemies.InfLig.bo[0]); } },
    { time: 8.80, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, false, Enemies.InfLig.bo[0], 0, 10); } },
];
EnemyActions.InfLig4 = [
    { time: 0.20, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0], 0, 10); } },
    { time: 0.40, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0]); } },
    { time: 0.60, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0], 0, 10); } },
    { time: 1.20, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0]); } },
    { time: 1.40, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0]); } },
    { time: 1.60, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0], 0, 10); } },
    { time: 2.20, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0]); } },
    { time: 2.40, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0]); } },
    { time: 2.60, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0], 0, 10); } },
    { time: 3.20, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0]); } },
    { time: 3.40, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0]); } },
    { time: 3.60, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0], 0, 10); } },
    { time: 4.20, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0]); } },
    { time: 4.40, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0], 0, 10); } },
    { time: 4.60, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0]); } },
    { time: 5.20, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0]); } },
    { time: 5.40, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0]); } },
    { time: 5.60, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0], 0, 10); } },
    { time: 6.20, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0], 0, 10); } },
    { time: 6.40, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0]); } },
    { time: 6.60, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0], 0, 10); } },
    { time: 7.20, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0]); } },
    { time: 7.40, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0], 0, 10); } },
    { time: 7.60, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0]); } },
    { time: 8.20, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0], 0, 10); } },
    { time: 8.40, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0]); } },
    { time: 8.60, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueMed, entity, time, true, Enemies.InfLig.bo[0]); } },
];

// InfPes
EnemyActions.InfPes1 = [
    { time: 0.00, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, true,  Enemies.InfPes.bo[0], 0, 30, 2, 10); } },
    { time: 0.00, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, true,  Enemies.InfPes.bo[1], 0, 30, 2); } },
    { time: 0.10, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[0], 0, 30, 2); } },
    { time: 0.10, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[1], 0, 30, 2, 10); } },
    { time: 0.20, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[0], 0, 30, 2); } },
    { time: 0.20, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[1], 0, 30, 2, 10); } },
    { time: 0.30, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[0], 0, 30, 2); } },
    { time: 0.30, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[1], 0, 30, 2); } },

    { time: 1.00, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, true,  Enemies.InfPes.bo[0], 0, 30, 2, 10); } },
    { time: 1.00, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, true,  Enemies.InfPes.bo[1], 0, 30, 2); } },
    // { time: 1.10, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[0], 0, 20, 2); } },
    // { time: 1.10, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[1], 0, 20, 2); } },
    // { time: 1.20, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[0], 0, 20, 2); } },
    // { time: 1.20, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[1], 0, 20, 2); } },
    // { time: 1.30, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[0], 0, 20, 2); } },
    // { time: 1.30, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[1], 0, 20, 2); } },

    { time: 2.00, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, true,  Enemies.InfPes.bo[0], 0, 30, 2); } },
    { time: 2.00, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, true,  Enemies.InfPes.bo[1], 0, 30, 2); } },
    { time: 2.10, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[0], 0, 30, 2); } },
    { time: 2.10, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[1], 0, 30, 2, 10); } },
    { time: 2.20, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[0], 0, 30, 2); } },
    { time: 2.20, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[1], 0, 30, 2); } },
    { time: 2.30, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[0], 0, 30, 2); } },
    { time: 2.30, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[1], 0, 30, 2); } },

    { time: 3.00, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, true,  Enemies.InfPes.bo[0], 0, 30, 2); } },
    { time: 3.00, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, true,  Enemies.InfPes.bo[1], 0, 30, 2); } },
    // { time: 3.10, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[0], 0, 20, 2); } },
    // { time: 3.10, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[1], 0, 20, 2); } },
    // { time: 3.20, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[0], 0, 20, 2); } },
    // { time: 3.20, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[1], 0, 20, 2); } },
    // { time: 3.30, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[0], 0, 20, 2); } },
    // { time: 3.30, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[1], 0, 20, 2); } },

    { time: 4.00, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, true,  Enemies.InfPes.bo[0], 0, 30, 2, 0, 10); } },
    { time: 4.00, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, true,  Enemies.InfPes.bo[1], 0, 30, 2); } },
    { time: 4.10, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[0], 0, 30, 2); } },
    { time: 4.10, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[1], 0, 30, 2, 0, 10); } },
    { time: 4.20, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[0], 0, 30, 2); } },
    { time: 4.20, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[1], 0, 30, 2, 0, 10); } },
    { time: 4.30, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[0], 0, 30, 2); } },
    { time: 4.30, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[1], 0, 30, 2, 0, 10); } },

    { time: 5.00, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, true,  Enemies.InfPes.bo[0], 0, 30, 2); } },
    { time: 5.00, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, true,  Enemies.InfPes.bo[1], 0, 30, 2); } },
    // { time: 5.10, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[0], 0, 20, 2); } },
    // { time: 5.10, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[1], 0, 20, 2); } },
    // { time: 5.20, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[0], 0, 20, 2); } },
    // { time: 5.20, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[1], 0, 20, 2); } },
    // { time: 5.30, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[0], 0, 20, 2); } },
    // { time: 5.30, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[1], 0, 20, 2); } },

    { time: 6.00, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, true,  Enemies.InfPes.bo[0], 0, 30, 2, 0, 10); } },
    { time: 6.00, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, true,  Enemies.InfPes.bo[1], 0, 30, 2); } },
    { time: 6.10, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[0], 0, 30, 2); } },
    { time: 6.10, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[1], 0, 30, 2, 0, 10); } },
    { time: 6.20, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[0], 0, 30, 2); } },
    { time: 6.20, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[1], 0, 30, 2, 0, 10); } },
    { time: 6.30, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[0], 0, 30, 2); } },
    { time: 6.30, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[1], 0, 30, 2); } },

    { time: 7.00, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, true,  Enemies.InfPes.bo[0], 0, 30, 2, 0, 10); } },
    // { time: 7.00, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, true,  Enemies.InfPes.bo[1], 0, 20, 2); } },
    // { time: 7.10, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[0], 0, 20, 2); } },
    // { time: 7.10, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[1], 0, 20, 2); } },
    // { time: 7.20, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[0], 0, 20, 2); } },
    // { time: 7.20, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[1], 0, 20, 2); } },
    // { time: 7.30, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[0], 0, 20, 2); } },
    // { time: 7.30, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[1], 0, 20, 2); } },

    { time: 8.00, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, true,  Enemies.InfPes.bo[0], 0, 30, 2); } },
    { time: 8.00, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, true,  Enemies.InfPes.bo[1], 0, 30, 2); } },
    { time: 8.10, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[0], 0, 30, 2, 0, 10); } },
    { time: 8.10, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[1], 0, 30, 2); } },
    { time: 8.20, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[0], 0, 30, 2); } },
    { time: 8.20, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[1], 0, 30, 2, 0, 10); } },
    { time: 8.30, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[0], 0, 30, 2); } },
    { time: 8.30, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.PlasmaOrngMed, entity, time, false, Enemies.InfPes.bo[1], 0, 30, 2, 0, 10); } },
];

// TankBig
EnemyActions.TankBig1 = [
    { time: 1.0, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaOrngBig, entity, time, true, entity.bulletOffset(Enemies.TankBig.bo[0])); } },
    { time: 1.2, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaOrngBig, entity, time, true, entity.bulletOffset(Enemies.TankBig.bo[0])); } },
    { time: 1.4, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaOrngBig, entity, time, true, entity.bulletOffset(Enemies.TankBig.bo[0])); } },
    { time: 1.6, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaOrngBig, entity, time, true, entity.bulletOffset(Enemies.TankBig.bo[0])); } },
    { time: 1.8, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaOrngBig, entity, time, true, entity.bulletOffset(Enemies.TankBig.bo[0])); } },
    { time: 3.0, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaOrngBig, entity, time, true, entity.bulletOffset(Enemies.TankBig.bo[0])); } },
    { time: 3.2, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaOrngBig, entity, time, true, entity.bulletOffset(Enemies.TankBig.bo[0])); } },
    { time: 3.4, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaOrngBig, entity, time, true, entity.bulletOffset(Enemies.TankBig.bo[0])); } },
    { time: 3.6, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaOrngBig, entity, time, true, entity.bulletOffset(Enemies.TankBig.bo[0])); } },
    { time: 3.8, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaOrngBig, entity, time, true, entity.bulletOffset(Enemies.TankBig.bo[0])); } },
    { time: 5.0, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaOrngBig, entity, time, true, entity.bulletOffset(Enemies.TankBig.bo[0])); } },
    { time: 5.2, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaOrngBig, entity, time, true, entity.bulletOffset(Enemies.TankBig.bo[0])); } },
    { time: 5.4, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaOrngBig, entity, time, true, entity.bulletOffset(Enemies.TankBig.bo[0])); } },
    { time: 5.6, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaOrngBig, entity, time, true, entity.bulletOffset(Enemies.TankBig.bo[0])); } },
    { time: 5.8, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaOrngBig, entity, time, true, entity.bulletOffset(Enemies.TankBig.bo[0])); } },
    { time: 7.0, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaOrngBig, entity, time, true, entity.bulletOffset(Enemies.TankBig.bo[0])); } },
    { time: 7.2, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaOrngBig, entity, time, true, entity.bulletOffset(Enemies.TankBig.bo[0])); } },
    { time: 7.4, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaOrngBig, entity, time, true, entity.bulletOffset(Enemies.TankBig.bo[0])); } },
    { time: 7.6, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaOrngBig, entity, time, true, entity.bulletOffset(Enemies.TankBig.bo[0])); } },
    { time: 7.8, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaOrngBig, entity, time, true, entity.bulletOffset(Enemies.TankBig.bo[0])); } },
    { time: 9.0, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaOrngBig, entity, time, true, entity.bulletOffset(Enemies.TankBig.bo[0])); } },
    { time: 9.2, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaOrngBig, entity, time, true, entity.bulletOffset(Enemies.TankBig.bo[0])); } },
    { time: 9.4, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaOrngBig, entity, time, true, entity.bulletOffset(Enemies.TankBig.bo[0])); } },
    { time: 9.6, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaOrngBig, entity, time, true, entity.bulletOffset(Enemies.TankBig.bo[0])); } },
    { time: 9.8, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaOrngBig, entity, time, true, entity.bulletOffset(Enemies.TankBig.bo[0])); } },
];

// Kamikaze
EnemyActions.Kami0 = [
];

EnemyActions.Kami1 = [
    { time: 0.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueSma, entity, time, true,  Enemies.Kami1.bo[0], 0, 10); } },
    { time: 1.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueSma, entity, time, true,  Enemies.Kami1.bo[0]); } },
    { time: 2.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueSma, entity, time, true,  Enemies.Kami1.bo[0]); } },
    { time: 3.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueSma, entity, time, true,  Enemies.Kami1.bo[0], 0, 10); } },
    { time: 4.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueSma, entity, time, true,  Enemies.Kami1.bo[0]); } },
	{ time: 5.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueSma, entity, time, true,  Enemies.Kami1.bo[0], 0, 10); } },
	{ time: 6.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueSma, entity, time, true,  Enemies.Kami1.bo[0]); } },
];

EnemyActions.Kami2 = [
    { time: 0.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueSma, entity, time, true,  Enemies.Kami1.bo[0]); } },
    { time: 0.20, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueSma, entity, time, false, Enemies.Kami1.bo[0], 0, 10); } },
    { time: 1.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueSma, entity, time, true,  Enemies.Kami1.bo[0]); } },
    // { time: 1.20, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueSma, entity, time, false, Enemies.Kami1.bo[0]); } },
    { time: 2.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueSma, entity, time, true,  Enemies.Kami1.bo[0], 0, 10); } },
    { time: 2.20, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueSma, entity, time, false, Enemies.Kami1.bo[0]); } },
    { time: 3.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueSma, entity, time, true,  Enemies.Kami1.bo[0], 0, 10); } },
    // { time: 3.20, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueSma, entity, time, false, Enemies.Kami1.bo[0]); } },
    { time: 4.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueSma, entity, time, true,  Enemies.Kami1.bo[0], 0, 10); } },
    { time: 4.20, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueSma, entity, time, false, Enemies.Kami1.bo[0]); } },
	{ time: 5.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueSma, entity, time, true,  Enemies.Kami1.bo[0]); } },
    // { time: 5.20, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueSma, entity, time, false, Enemies.Kami1.bo[0]); } },
	{ time: 6.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueSma, entity, time, true,  Enemies.Kami1.bo[0]); } },
    { time: 6.20, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaBlueSma, entity, time, false, Enemies.Kami1.bo[0], 0, 10); } },
];


// InfAir1
EnemyActions.InfAir1 = [
    { time: 0.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, true,  Enemies.InfAir.bo[0]); } },
    { time: 0.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, false, Enemies.InfAir.bo[1], 0, 10); } },
    { time: 0.30, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, false, Enemies.InfAir.bo[0], 0, 10); } },
    { time: 0.30, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, false, Enemies.InfAir.bo[1]); } },	
    // { time: 1.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, true,  Enemies.InfAir.bo[0]); } },
    // { time: 1.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, false, Enemies.InfAir.bo[1]); } },
    { time: 1.30, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, false, Enemies.InfAir.bo[0]); } },
    { time: 1.30, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, false, Enemies.InfAir.bo[1], 0, 10); } },	
    { time: 2.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, true,  Enemies.InfAir.bo[0]); } },
    { time: 2.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, false, Enemies.InfAir.bo[1], 0, 10); } },
    // { time: 2.30, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, false, Enemies.InfAir.bo[0]); } },
    // { time: 2.30, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, false, Enemies.InfAir.bo[1]); } },		
    { time: 3.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, true,  Enemies.InfAir.bo[0]); } },
    { time: 3.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, false, Enemies.InfAir.bo[1], 0, 10); } },
    { time: 3.30, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, false, Enemies.InfAir.bo[0]); } },
    { time: 3.30, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, false, Enemies.InfAir.bo[1]); } },	
];

// InfAir2
EnemyActions.InfAir2 = [
    { time: 0.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, true,  Enemies.InfAir.bo[0]); } },
    { time: 0.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, false, Enemies.InfAir.bo[1]); } },
    { time: 0.15, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, false, Enemies.InfAir.bo[0]); } },
    { time: 0.15, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, false, Enemies.InfAir.bo[1]); } },
    { time: 0.30, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, false, Enemies.InfAir.bo[0]); } },
    { time: 0.30, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, false, Enemies.InfAir.bo[1]); } },	
    { time: 2.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, true,  Enemies.InfAir.bo[0]); } },
    { time: 2.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, false, Enemies.InfAir.bo[1]); } },
    { time: 2.15, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, false, Enemies.InfAir.bo[0]); } },
    { time: 2.15, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, false, Enemies.InfAir.bo[1]); } },
    { time: 2.30, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, false, Enemies.InfAir.bo[0]); } },
    { time: 2.30, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, false, Enemies.InfAir.bo[1]); } },	
    { time: 4.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, true,  Enemies.InfAir.bo[0]); } },
    { time: 4.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, false, Enemies.InfAir.bo[1]); } },
    { time: 4.15, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, false, Enemies.InfAir.bo[0]); } },
    { time: 4.15, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, false, Enemies.InfAir.bo[1]); } },	
    { time: 4.30, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, false, Enemies.InfAir.bo[0]); } },
    { time: 4.30, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, false, Enemies.InfAir.bo[1]); } },		
    { time: 6.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, true,  Enemies.InfAir.bo[0]); } },
    { time: 6.00, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, false, Enemies.InfAir.bo[1]); } },
    { time: 6.15, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, false, Enemies.InfAir.bo[0]); } },
    { time: 6.15, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, false, Enemies.InfAir.bo[1]); } },
    { time: 6.30, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, false, Enemies.InfAir.bo[0]); } },
    { time: 6.30, action: function(entity, time) { Bullets.ShootTarget(Bullets.PlasmaPinkSma, entity, time, false, Enemies.InfAir.bo[1]); } },	
];

// BigAir
EnemyActions.BigAir1 = [
    { time: 1.00, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.LaserPinkBig, entity, time, true,  Enemies.BigAir.bo[0], 0, 50, 4); } },
	{ time: 1.00, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.LaserPinkBig, entity, time, false, Enemies.BigAir.bo[1], 0, 50, 4); } },
    { time: 1.20, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.LaserPinkBig, entity, time, false, Enemies.BigAir.bo[0], 0, 50, 4); } },
	{ time: 1.20, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.LaserPinkBig, entity, time, false, Enemies.BigAir.bo[1], 0, 50, 4); } },	
    { time: 2.00, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.LaserPinkBig, entity, time, true,  Enemies.BigAir.bo[0], 0, 50, 4); } },
	{ time: 2.00, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.LaserPinkBig, entity, time, false, Enemies.BigAir.bo[1], 0, 50, 4); } },
    { time: 2.20, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.LaserPinkBig, entity, time, false, Enemies.BigAir.bo[0], 0, 50, 4); } },
	{ time: 2.20, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.LaserPinkBig, entity, time, false, Enemies.BigAir.bo[1], 0, 50, 4); } },	
	{ time: 3.00, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.LaserPinkBig, entity, time, true,  Enemies.BigAir.bo[0], 0, 50, 4); } },
	{ time: 3.00, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.LaserPinkBig, entity, time, false, Enemies.BigAir.bo[1], 0, 50, 4); } },
    { time: 3.20, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.LaserPinkBig, entity, time, false, Enemies.BigAir.bo[0], 0, 50, 4); } },
	{ time: 3.20, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.LaserPinkBig, entity, time, false, Enemies.BigAir.bo[1], 0, 50, 4); } },	
    { time: 4.00, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.LaserPinkBig, entity, time, true,  Enemies.BigAir.bo[0], 0, 50, 4); } },
	{ time: 4.00, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.LaserPinkBig, entity, time, false, Enemies.BigAir.bo[1], 0, 50, 4); } },
    { time: 4.20, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.LaserPinkBig, entity, time, false, Enemies.BigAir.bo[0], 0, 50, 4); } },
	{ time: 4.20, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.LaserPinkBig, entity, time, false, Enemies.BigAir.bo[1], 0, 50, 4); } },	
    { time: 5.00, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.LaserPinkBig, entity, time, true,  Enemies.BigAir.bo[0], 0, 50, 4); } },
	{ time: 5.00, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.LaserPinkBig, entity, time, false, Enemies.BigAir.bo[1], 0, 50, 4); } },
    { time: 5.20, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.LaserPinkBig, entity, time, false, Enemies.BigAir.bo[0], 0, 50, 4); } },
	{ time: 5.20, action: function(entity, time) { Bullets.ShootTargetCircle(Bullets.LaserPinkBig, entity, time, false, Enemies.BigAir.bo[1], 0, 50, 4); } },	
];
